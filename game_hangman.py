import random

word_list = ['—Ñ—É–Ω–∫—Ü–∏—è','–ø—Ä–æ–∏–∑–≤–æ–¥–Ω–∞—è','–¥–∏—Å–∫—Ä–∏–º–∏–Ω–∞–Ω—Ç','–∞–∫—Å–∏–æ–º–∞','–∏–Ω—Ç–µ–≥—Ä–∞–ª','–≥–∏–ø–µ—Ä–±–æ–ª–∞','–≤–µ–∫—Ç–æ—Ä','–∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞','–ª–µ–º–º–∞','–ø–∞—Ä–∞–±–æ–ª–∞','—Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª','–∞–±—Å—Ü–∏—Å—Å–∞','–∞–ø–ø–ª–∏–∫–∞—Ç–∞','–∫–∞—Ç–µ—Ç','–≥–∏–ø–æ—Ç–µ–Ω—É–∑–∞','–ø–ª–æ—â–∞–¥—å','—É–≥–æ–ª','—Ç–∞–Ω–≥–µ–Ω—Å','–∫–æ—Å–∏–Ω—É—Å','—Å–∏–Ω—É—Å']

# —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Å–ª–æ–≤–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ –≤ –≤–µ—Ä—Ö–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ
def get_word():
    return random.choice(word_list).upper()

# —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
def display_hangman(tries):
    stages = [  # —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–¥–µ–ª–∞–Ω–Ω–∞—è –≤–∏—Å–µ–ª–∏—Ü–∞
                ''' 
                   --------
                   |      |
                   |      üíÄ
                   |     /|\\
                   |      |
                   |     / \ 
                   |     
                   |     ___
                   |     | |
                -------
                ''',
                # –≤–∏—Å–µ–ª–∏—Ü–∞ –±–µ–∑ –≤–µ—Ä–µ–≤–∫–∏ üò≠
                '''
                   --------
                   |
                   |      
                   |      üò≠
                   |     /|\\
                   |      |
                   |     / \ 
                   |     ___
                   |     | |
                -------
                ''',
                # –≤–∏—Å–µ–ª–∏—Ü–∞ –±–µ–∑ –ø–µ—Ä–µ–∫–ª–∞–¥–∏–Ω—ã –∏ –≤–µ—Ä–µ–≤–∫–∏ üò®
                '''
                   
                   |
                   |      
                   |      üò®
                   |     /|\\
                   |      |
                   |     / \ 
                   |     ___
                   |     | |
                -------
                ''',
                # –ø–æ–ª–æ–≤–∏–Ω–∞ –≤–µ—Å–µ–ª–∏—Ü—ã üòñ
                '''
                         
                      
                          üòñ
                         /|\\
                   |      |
                   |     / \ 
                   |     ___
                   |     | |
                -------
                ''',
                # –æ—Å–Ω–æ–≤–∞–Ω–∏–µ –≤–∏—Å–µ–ª–∏—Ü—ã üò©
                '''
                   
                          üò©
                         /|\\
                          |
                         / \ 
                         ___
                         | |
                -------
                ''',
                # –Ω–µ—Ç –≤–∏—Å–µ–ª–∏—Ü—ãü•∫
                '''
                
                          ü•∫
                         /|\\
                          |
                         / \ 
                         ___
                         | |
                
                   
                ''',
                # –Ω–µ—Ç –≤–∏—Å–µ–ª–∏—Ü—ã –∏ —á–µ–ª–æ–≤–µ–∫–∞,–æ–¥–∏–Ω —Å—Ç—É–ª
                '''
                   
                         
                         
                       
                         
                         ___
                         | |
                
                '''
    ]
    return stages[tries]

def play(word):
    word_completion = '_' * len(word)  # —Å—Ç—Ä–æ–∫–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∞—è —Å–∏–º–≤–æ–ª—ã _ –Ω–∞ –∫–∞–∂–¥—É—é –±—É–∫–≤—É –∑–∞–¥—É–º–∞–Ω–Ω–æ–≥–æ —Å–ª–æ–≤–∞
    guessed = False                    # —Å–∏–≥–Ω–∞–ª—å–Ω–∞—è –º–µ—Ç–∫–∞
    guessed_letters = []               # —Å–ø–∏—Å–æ–∫ —É–∂–µ –Ω–∞–∑–≤–∞–Ω–Ω—ã—Ö –±—É–∫–≤
    guessed_words = []                 # —Å–ø–∏—Å–æ–∫ —É–∂–µ –Ω–∞–∑–≤–∞–Ω–Ω—ã—Ö —Å–ª–æ–≤
    tries = 6                          # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫

    print('–î–∞–≤–∞–π—Ç–µ –∏–≥—Ä–∞—Ç—å –≤ —É–≥–∞–¥–∞–π–∫—É —Å–ª–æ–≤!')
    print(f'–í–∏—Å–µ–ª–∏—Ü–∞: {display_hangman(tries)}')
    print(f'–ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ: {word_completion}')

    while tries >= 0:
        if tries == 0:
            print('–£–≤—ã, –ø–æ–ø—ã—Ç–∫–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å, –í—ã –Ω–µ —É–≥–∞–¥–∞–ª–∏ —Å–ª–æ–≤–æ')
            print(f'–ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ: {word}')
            print(f'–í–∏—Å–µ–ª–∏—Ü–∞: {display_hangman(tries)}')
            break
        word_input = input('–í–≤–µ–¥–∏—Ç–µ –±—É–∫–≤—É –∏–ª–∏ —Å–ª–æ–≤–æ: ').upper()
        if '–ê' <= word_input <= '–Ø' or word_input.isalpha():

            if word_input in guessed_letters or word_input in guessed_words:
                print('–í—ã —ç—Ç–æ —É–∂–µ –≤–≤–æ–¥–∏–ª–∏')
                continue
            elif len(word_input) == 1 and word_input in word:
                for i in range(len(word)):
                    if word[i] == word_input:
                        word_completion = word_completion[:i] + word_input + word_completion[i+1:]
                    elif word_completion == word:
                       print('–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –í—ã —É–≥–∞–¥–∞–ª–∏ —Å–ª–æ–≤–æ! –í—ã –ø–æ–±–µ–¥–∏–ª–∏!')
                       print(f'–ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ: {word}')
                       break
                guessed_letters.append(word_input)
                    
                print(f'–í—ã —É–≥–∞–¥–∞–ª–∏ –±—É–∫–≤—É\n{word_completion}')
            elif len(word_input) == 1 and word_input not in word:
                tries -= 1
                guessed_letters.append(word_input)
                print(f'–í–´ –Ω–µ —É–≥–∞–¥–∞–ª–∏ –±—É–∫–≤—É, –æ—Å—Ç–∞–ª–æ—Å—å –ø–æ–ø—ã—Ç–æ–∫ {tries}')
                print(word_completion)
                print(f'–í–∏—Å–µ–ª–∏—Ü–∞: {display_hangman(tries)}')
            
            elif len(word_input) > 1:
                if word_input == word:
                    print('–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –í—ã —É–≥–∞–¥–∞–ª–∏ —Å–ª–æ–≤–æ! –í—ã –ø–æ–±–µ–¥–∏–ª–∏!')
                    print(f'–ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ: {word}')
                    break
                else:
                    tries -= 1
                    guessed_words.append(word_input)
                    print(f'–í—ã –Ω–µ —É–≥–∞–¥–∞–ª–∏ —Å–ª–æ–≤–æ, –æ—Å—Ç–∞–ª–æ—Å—å –ø–æ–ø—ã—Ç–æ–∫ {tries}')
                    print(word_completion)
                    print(f'–í–∏—Å–µ–ª–∏—Ü–∞: {display_hangman(tries)}')
           

        else:
            print('–í—ã –≤–≤–µ–ª–∏ –Ω–µ –±—É–∫–≤—É –∏ –Ω–µ —Å–ª–æ–≤–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑')

while True:
    word = get_word()
    play(word)
    repeat = input('–•–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑?(–¥–∞/–Ω–µ—Ç) ').lower()
    if repeat == '–¥–∞':
        print('\n')
    elif repeat == '–Ω–µ—Ç':
        print('–í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å —Å–Ω–æ–≤–∞, –¥–æ —Å–≤–∏–¥–∞–Ω–∏—è!')
        break
    else:
        break